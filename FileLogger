package faulttolerant;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

public class FileLogger {

    public static final int MAX_BACKUP = 5;
    private static final Random random = new Random();

    public static void log(String baseName, String message) {
        String timeStampedMessage = "[" + getCurrentTimeStamp() + "] " + message;

        for (int i = 0; i <= MAX_BACKUP; i++) {
            String fileName = (i == 0) ? baseName + ".txt" : baseName + i + ".txt";
            try {
                simulateFailure();
                writeToFile(fileName, timeStampedMessage);
                return; // success
            } catch (IOException e) {
                // try next
            }
        }

        try {
            writeToFile("principal_log.txt", timeStampedMessage);
        } catch (IOException e) {
            System.err.println("Critical Failure: Unable to log event.");
        }
    }

    private static void simulateFailure() throws IOException {
        if (random.nextInt(100) < 40) {
            throw new IOException("Simulated write failure");
        }
    }

    private static void writeToFile(String fileName, String message) throws IOException {
        FileWriter fw = new FileWriter(fileName, true);
        fw.write(message + "\n");
        fw.close();
    }

    private static String getCurrentTimeStamp() {
        return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
    }
}
